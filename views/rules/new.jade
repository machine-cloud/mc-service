extends ../layout

block script

  script(src="/js/rules.js")
  script
    var devices = {};

    $('.condition .device').on('change', function() {
      var device = $('.condition .device');
      $('.condition .output option').remove();
      if (devices[$(device).val()]) {
        for (var output in devices[$(device).val()].model.outputs) {
          $('.condition .output').append('<option>' + output + '</option>');
        }
      }
      $('.condition .output').change();
    });

    $('.action .device').on('change', function() {
      var device = $('.action .device');
      $('.action .input option').remove();
      if ($(device).val() == 'salesforce') {
        $('.action .input').append('<option>case</option>');
        $('.action .input').append('<option>chatter</option>');
      }
      if (devices[$(device).val()]) {
        for (var input in devices[$(device).val()].model.inputs) {
          $('.action .input').append('<option>' + input + '</option>');
        }
      }
      $('.action .input').change();
    });

    $('.condition .output').on('change', function() {
      var device = $('.condition .device').val();
      var output = $('.condition .output').val();
      if (devices[device]) {
        var type = devices[device].model.outputs[output];
        $('.condition .value-container *').remove();
        $('.condition .compare').hide();
        console.log('type', type);
        switch (type) {
          case 'integer':
          case 'float':
          case 'string':
            $('.condition .compare').show();
            $('.condition .value-container').append('<input name="condition.value" type="text" class="input-small value" />');
            break;
          case 'rgb':
            $('.condition .compare').show();
            $('.condition .value-container').append('<input name="condition.value" type="text" class="input-small value" />');
            $('.condition .value').pickAColor();
            break;
          case 'action':
            break;
        }
      }
    });

    $('.action .input').on('change', function() {
      var device = $('.action .device').val();
      var input = $('.action .input').val();
      if (devices[device]) {
        var type = devices[device].model.inputs[input];
        $('.action .value-container *').remove();
        switch (type) {
          case 'integer', 'float':
            $('.action .value-container').append('<input name="action.value" type="text" class="input-small value" />');
            break;
          case 'rgb':
            $('.action .value-container').append('<input name="action.value" type="text" class="input-small value" />');
            $('.action .value').pickAColor();
            break;
          case 'action':
            break;
        }
      }
    });

    $(window).ready(function() {
      $.getJSON('/devices.json', function (data) {
        for (var idx in data) {
          device = data[idx];
          devices[device.id] = device;
          console.log('device', device);
          $('.device').append('<option>' + device.id + '</option>');
        };
        $('.condition .device').change();
        $('.action .device').change();
      });
    });

  if salesforce
    script
      $(window).ready(function() {
        $('.action .device').append('<option>salesforce</option>');
      });

block content

  .container
    form(method="post", action="/rules")#rules
      fieldset
        legend New Rule

        label Condition
        .controls.condition
          select(name="condition.device").device
          select(name="condition.output").output
          select(name="condition.compare").compare
            option =
            option >
            option <
          .value-container

        label Action
        .controls.action
          select(name="action.device").device
          select(name="action.input").input
          .value-container

      input(type="submit", value="Save").btn.btn-primary
